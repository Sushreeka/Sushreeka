#include <iostream>
#include <vector>
#include <cstdlib>
#include <ctime>

using namespace std;

// Function to merge two halves
void merge(vector<int> &arr, int left, int mid, int right) {
    int n1 = mid - left + 1;
    int n2 = right - mid;

    vector<int> L(n1), R(n2);
    for (int i = 0; i < n1; i++) L[i] = arr[left + i];
    for (int i = 0; i < n2; i++) R[i] = arr[mid + 1 + i];

    int i = 0, j = 0, k = left;
    while (i < n1 && j < n2) {
        if (L[i] <= R[j]) arr[k++] = L[i++];
        else arr[k++] = R[j++];
    }
    
    while (i < n1) arr[k++] = L[i++];
    while (j < n2) arr[k++] = R[j++];
}

// Merge sort function
void mergeSort(vector<int> &arr, int left, int right) {
    if (left < right) {
        int mid = left + (right - left) / 2;
        mergeSort(arr, left, mid);
        mergeSort(arr, mid + 1, right);
        merge(arr, left, mid, right);
    }
}

// Linear search function
int linearSearch(vector<int> &arr, int key) {
    for (size_t i = 0; i < arr.size(); i++) {
        if (arr[i] == key) return i; // Return index if found
    }
    return -1; // Not found
}

int main() {
    srand(time(0));
    int N;
    cout << "Enter number of elements: ";
    cin >> N;

    vector<int> arr(N);
    cout << "Generated Random Numbers: ";
    for (int i = 0; i < N; i++) {
        arr[i] = rand() % 100; // Random numbers between 0-99
        cout << arr[i] << " ";
    }
    cout << endl;

    mergeSort(arr, 0, N - 1);

    cout << "Sorted Array: ";
    for (int num : arr) cout << num << " ";
    cout << endl;

    int searchElement;
    cout << "Enter element to search: ";
    cin >> searchElement;

    int index = linearSearch(arr, searchElement);
    if (index != -1) cout << "Element found at index: " << index << endl;
    else cout << "Element not found." << endl;

    return 0;
}
